{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/Portfolio/wallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { userInfo } from '../actions';\nimport '../style/login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.disableButton = this.disableButton.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      redirect: false\n    };\n  }\n\n  onChangeHandler(field, newValue) {\n    this.setState({\n      [field]: newValue\n    });\n  }\n\n  disableButton(func) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    const minLength = 6;\n    const {\n      email,\n      password\n    } = this.state;\n\n    const funcs = data => {\n      func(data);\n      this.setState({\n        redirect: true\n      });\n    };\n\n    return password.length >= minLength && re.test(email) ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => funcs(email),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"Entrar\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Entrar\");\n  }\n\n  render() {\n    const {\n      getEmail\n    } = this.props;\n    const {\n      redirect\n    } = this.state;\n\n    if (redirect === true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/carteira\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"position-absolute top-50 start-50 translate-middle login-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/currency_wallet.npg\",\n      alt: \"wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"email-input\",\n      placeholder: \"name@example.com\",\n      onChange: e => this.onChangeHandler('email', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Password\",\n      type: \"text\",\n      \"data-testid\": \"password-input\",\n      onChange: e => this.onChangeHandler('password', e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), this.disableButton(getEmail));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getEmail: email => dispatch(userInfo(email))\n});\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/igor/Documentos/Portfolio/wallet/src/pages/Login.js"],"names":["React","connect","Redirect","PropTypes","userInfo","Login","Component","constructor","onChangeHandler","bind","disableButton","state","email","password","redirect","field","newValue","setState","func","re","minLength","funcs","data","length","test","render","getEmail","props","e","target","value","mapDispatchToProps","dispatch","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { userInfo } from '../actions';\nimport '../style/login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.disableButton = this.disableButton.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      redirect: false,\n    };\n  }\n\n  onChangeHandler(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  disableButton(func) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    const minLength = 6;\n    const { email, password } = this.state;\n    const funcs = (data) => {\n      func(data);\n      this.setState({\n        redirect: true,\n      });\n    };\n    return (\n      password.length >= minLength && re.test(email)\n        ? <button type=\"submit\" onClick={ () => funcs(email) }>Entrar</button>\n        : <button type=\"submit\" disabled>Entrar</button>\n    );\n  }\n\n  render() {\n    const { getEmail } = this.props;\n    const { redirect } = this.state;\n    if (redirect === true) {\n      return <Redirect to=\"/carteira\" />;\n    }\n    return (\n      <div className=\"position-absolute top-50 start-50 translate-middle login-box\">\n        <img src=\"/currency_wallet.npg\" alt=\"wallet\"/>\n        <input\n          type=\"text\"\n          data-testid=\"email-input\"\n          placeholder=\"name@example.com\"\n          onChange={ (e) => this.onChangeHandler('email', e.target.value) }\n        />\n        <input\n          placeholder=\"Password\"\n          type=\"text\"\n          data-testid=\"password-input\"\n          onChange={ (e) => this.onChangeHandler('password', e.target.value) }\n        />\n        { this.disableButton(getEmail) }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getEmail: (email) => dispatch(userInfo(email)),\n});\n\nLogin.propTypes = {\n  getEmail: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}