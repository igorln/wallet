{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/Trybe/projetos/projeto_16/sd-08-project-trybewallet/src/components/AddForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrencies, saveExpense } from '../actions';\nimport fetchCurrency from '../services';\nimport '../style/header.css';\nconst INITIAL_STATE = {\n  value: 0,\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n  id: 0,\n  total: '0.00'\n};\n\nclass AddForm extends Component {\n  constructor() {\n    super();\n    this.state = { ...INITIAL_STATE\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.handleClick = this.handleClick.bind(this); // this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      getCurrency\n    } = this.props;\n    getCurrency();\n  }\n\n  onChangeHandler({\n    target\n  }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  } // totalExpenses() {\n  //   const { expenses } = this.props;\n  //   const totalExpenses = expenses.reduce(\n  //     (total, payed) => {\n  //       const { value, currency, exchangeRates } = payed;\n  //       const rate = parseFloat(exchangeRates[currency]);\n  //       return total + (parseFloat(value) * rate);\n  //     },\n  //     0,\n  //   );\n  //   return totalExpenses.toFixed(2);\n  // }\n\n\n  async handleClick(event) {\n    event.preventDefault();\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      id\n    } = this.state;\n    const {\n      saveExpense\n    } = this.props;\n    const exchangeRates = await fetchCurrency();\n    const expense = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      id,\n      exchangeRates\n    };\n    saveExpense(expense);\n    this.setState({ ...INITIAL_STATE,\n      id: id + 1 // total: this.totalExpenses(),\n\n    });\n  }\n\n  tagRender() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"tag\",\n      name: \"tag\",\n      onChange: e => this.onChangeHandler(e),\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))));\n  }\n\n  methodRender() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method\",\n      name: \"method\",\n      onChange: e => this.onChangeHandler(e),\n      \"data-testid\": \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))));\n  }\n\n  currencyRender(currenciesList) {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currency\",\n      name: \"currency\",\n      onChange: e => this.onChangeHandler(e),\n      \"data-testid\": \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, currenciesList.map(currency => currency === 'USDT' ? '' : /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      \"data-testid\": currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, currency)));\n  }\n\n  header(user) {\n    const {\n      total\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, user)), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, \"Despesa total: R$\", /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, total), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"BRL\")));\n  }\n\n  render() {\n    const {\n      currencies,\n      user\n    } = this.props;\n    const currenciesTags = Object.keys(currencies || {});\n    console.log(currencies);\n    console.log(currenciesTags);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.header(user), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"value\",\n      name: \"value\",\n      type: \"number\",\n      onChange: e => this.onChangeHandler(e),\n      \"data-testid\": \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"Moeda:\", this.currencyRender(currenciesTags))), this.methodRender(), this.tagRender(), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"description\",\n      name: \"description\",\n      type: \"text\",\n      onChange: e => this.onChangeHandler(e),\n      \"data-testid\": \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies[0],\n  user: state.user.email\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrency: () => dispatch(fetchCurrencies()),\n  saveExpense: expense => dispatch(saveExpense(expense))\n});\n\nAddForm.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object),\n  currencies: PropTypes.objectOf(PropTypes.object),\n  getCurrency: PropTypes.func.isRequired,\n  saveExpense: PropTypes.func.isRequired,\n  user: PropTypes.string.isRequired\n};\nAddForm.defaultProps = {\n  expenses: [],\n  currencies: {}\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddForm);","map":{"version":3,"sources":["/home/igor/Documentos/Trybe/projetos/projeto_16/sd-08-project-trybewallet/src/components/AddForm.js"],"names":["React","Component","connect","PropTypes","fetchCurrencies","saveExpense","fetchCurrency","INITIAL_STATE","value","description","currency","method","tag","id","total","AddForm","constructor","state","onChangeHandler","bind","handleClick","componentDidMount","getCurrency","props","target","setState","name","event","preventDefault","exchangeRates","expense","tagRender","e","methodRender","currencyRender","currenciesList","map","header","user","render","currencies","currenciesTags","Object","keys","console","log","mapStateToProps","expenses","wallet","email","mapDispatchToProps","dispatch","propTypes","arrayOf","object","objectOf","func","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrencies, saveExpense } from '../actions';\nimport fetchCurrency from '../services';\nimport '../style/header.css';\n\nconst INITIAL_STATE = {\n  value: 0,\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n  id: 0,\n  total: '0.00',\n};\n\nclass AddForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      ...INITIAL_STATE,\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    // this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    const { getCurrency } = this.props;\n    getCurrency();\n  }\n\n  onChangeHandler({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  // totalExpenses() {\n  //   const { expenses } = this.props;\n\n  //   const totalExpenses = expenses.reduce(\n  //     (total, payed) => {\n  //       const { value, currency, exchangeRates } = payed;\n  //       const rate = parseFloat(exchangeRates[currency]);\n  //       return total + (parseFloat(value) * rate);\n  //     },\n  //     0,\n  //   );\n  //   return totalExpenses.toFixed(2);\n  // }\n\n  async handleClick(event) {\n    event.preventDefault();\n    const { value, description, currency, method, tag, id } = this.state;\n    const { saveExpense } = this.props;\n    const exchangeRates = await fetchCurrency();\n\n    const expense = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      id,\n      exchangeRates,\n    };\n\n    saveExpense(expense);\n\n    this.setState({\n      ...INITIAL_STATE,\n      id: id + 1,\n      // total: this.totalExpenses(),\n    });\n  }\n\n  tagRender() {\n    return (\n      <div>\n        <label htmlFor=\"tag\">\n          Categoria:\n          <select\n            id=\"tag\"\n            name=\"tag\"\n            onChange={ (e) => this.onChangeHandler(e) }\n            data-testid=\"tag-input\"\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n\n  methodRender() {\n    return (\n      <div>\n        <label htmlFor=\"method\">\n          Método de pagamento:\n          <select\n            id=\"method\"\n            name=\"method\"\n            onChange={ (e) => this.onChangeHandler(e) }\n            data-testid=\"method-input\"\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n\n  currencyRender(currenciesList) {\n    return (\n      <select\n        id=\"currency\"\n        name=\"currency\"\n        onChange={ (e) => this.onChangeHandler(e) }\n        data-testid=\"currency-input\"\n      >\n        { currenciesList.map((currency) => (\n          currency === 'USDT' ? ''\n            : <option key={ currency } data-testid={ currency }>{ currency }</option>\n        )) }\n      </select>\n    );\n  }\n\n  header(user) {\n    const { total } = this.state;\n    return (\n      <header>\n        <h4>\n          Email:\n          <span data-testid=\"email-field\">{ user }</span>\n        </h4>\n        <h4>\n          Despesa total: R$\n          <span data-testid=\"total-field\">{ total }</span>\n          <span data-testid=\"header-currency-field\">BRL</span>\n        </h4>\n      </header>\n    );\n  }\n\n  render() {\n    const { currencies, user } = this.props;\n    const currenciesTags = Object.keys(currencies || {});\n    console.log(currencies);\n\n    console.log(currenciesTags);\n\n    return (\n      <>\n        { this.header(user)}\n        <div>\n          <label htmlFor=\"value\">\n            Valor:\n            <input\n              id=\"value\"\n              name=\"value\"\n              type=\"number\"\n              onChange={ (e) => this.onChangeHandler(e) }\n              data-testid=\"value-input\"\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"currency\">\n            Moeda:\n            { this.currencyRender(currenciesTags) }\n          </label>\n        </div>\n        { this.methodRender() }\n        { this.tagRender() }\n        <div>\n          <label htmlFor=\"description\">\n            Descrição:\n            <input\n              id=\"description\"\n              name=\"description\"\n              type=\"text\"\n              onChange={ (e) => this.onChangeHandler(e) }\n              data-testid=\"description-input\"\n            />\n          </label>\n          <button type=\"submit\" onClick={ this.handleClick }>Adicionar despesa</button>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies[0],\n  user: state.user.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrency: () => dispatch(fetchCurrencies()),\n  saveExpense: (expense) => dispatch(saveExpense(expense)),\n});\n\nAddForm.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object),\n  currencies: PropTypes.objectOf(PropTypes.object),\n  getCurrency: PropTypes.func.isRequired,\n  saveExpense: PropTypes.func.isRequired,\n  user: PropTypes.string.isRequired,\n};\n\nAddForm.defaultProps = {\n  expenses: [],\n  currencies: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddForm);\n"]},"metadata":{},"sourceType":"module"}