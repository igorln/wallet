{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/Trybe/projetos/projeto_16/sd-08-project-trybewallet/src/components/AddForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrencies, saveExpense } from '../actions';\nimport fetchCurrency from '../services';\nconst INITIAL_STATE = {\n  value: 0,\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n  id: 0,\n  total: '0.00'\n};\n\nclass AddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getCurrency\n    } = this.props;\n    getCurrency();\n  }\n\n  totalExpenses() {\n    const {\n      expenses\n    } = this.props;\n    const totalExpenses = expenses.reduce((total, each) => {\n      const {\n        value,\n        currency,\n        exchangeRates\n      } = each;\n      const rate = parseFloat(exchangeRates[currency].ask);\n      return total + parseFloat(value) * rate;\n    }, 0);\n    return totalExpenses.toFixed(2);\n  }\n\n  onChangeHandler(field, newValue) {\n    this.setState({\n      [field]: newValue\n    });\n  }\n\n  async handleClick(event) {\n    event.preventDefault();\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      id\n    } = this.state;\n    const {\n      saveExpense\n    } = this.props;\n    const exchangeRates = await fetchCurrency();\n    const expense = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      id,\n      exchangeRates\n    };\n    saveExpense(expense);\n    this.setState({ ...INITIAL_STATE,\n      id: id + 1,\n      total: this.totalExpenses()\n    });\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      onChangeHandler\n    } = this.state;\n    const currenciesTags = Object.keys(currencies || {});\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"value\",\n      type: \"number\",\n      onChange: onChangeHandler,\n      \"data-testid\": \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"currency\",\n      type: \"number\",\n      onChange: onChangeHandler,\n      \"data-testid\": \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method\",\n      onChange: onChangeHandler,\n      \"data-testid\": \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      on: true,\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      on: true,\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      on: true,\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"tag\",\n      onChange: onChangeHandler,\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, \"Sa\\xFAde\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"description\",\n      type: \"text\",\n      onChange: onChangeHandler,\n      \"data-testid\": \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrency: () => dispatch(fetchCurrencies()),\n  saveExpense: expense => dispatch(saveExpense(expense))\n});\n\nexport default connect(null, mapDispatchToProps)(AddForm);","map":{"version":3,"sources":["/home/igor/Documentos/Trybe/projetos/projeto_16/sd-08-project-trybewallet/src/components/AddForm.js"],"names":["React","Component","connect","PropTypes","fetchCurrencies","saveExpense","fetchCurrency","INITIAL_STATE","value","description","currency","method","tag","id","total","AddForm","constructor","props","state","componentDidMount","getCurrency","totalExpenses","expenses","reduce","each","exchangeRates","rate","parseFloat","ask","toFixed","onChangeHandler","field","newValue","setState","handleClick","event","preventDefault","expense","render","currencies","currenciesTags","Object","keys","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrencies, saveExpense } from '../actions';\nimport fetchCurrency from '../services';\n\nconst INITIAL_STATE = {\n  value: 0,\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: 'Alimentação',\n  id: 0,\n  total: '0.00',\n};\n\nclass AddForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...INITIAL_STATE,\n    };\n  }\n\n  componentDidMount() {\n    const { getCurrency } = this.props;\n    getCurrency();\n  }\n\n  totalExpenses() {\n    const { expenses } = this.props;\n\n    const totalExpenses = expenses.reduce(\n      (total, each) => {\n        const { value, currency, exchangeRates } = each;\n        const rate = parseFloat(exchangeRates[currency].ask);\n        return total + (parseFloat(value) * rate);\n      },\n      0,\n    );\n    return totalExpenses.toFixed(2);\n  }\n\n  onChangeHandler(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  async handleClick(event) {\n    event.preventDefault();\n    const { value, description, currency, method, tag, id } = this.state;\n    const { saveExpense } = this.props;\n    const exchangeRates = await fetchCurrency();\n\n    const expense = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      id,\n      exchangeRates,\n    };\n\n    saveExpense(expense);\n\n    this.setState({\n      ...INITIAL_STATE,\n      id: id + 1,\n      total: this.totalExpenses(),\n    });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { onChangeHandler } = this.state;\n    const currenciesTags = Object.keys(currencies || {});\n    return (\n      <div>\n        <div>\n          <label htmlFor=\"value\">\n            Valor:\n            <input id=\"value\" type=\"number\" onChange={ onChangeHandler } data-testid=\"value-input\" />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"currency\">\n            Moeda:\n            <input id=\"currency\" type=\"number\" onChange={ onChangeHandler } data-testid=\"currency-input\" />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"method\">\n            Método de pagamento:\n            <select id=\"method\" onChange={ onChangeHandler } data-testid=\"method-input\">\n              <option on value=\"Dinheiro\">Dinheiro</option>\n              <option on value=\"Cartão de crédito\">Cartão de crédito</option>\n              <option on value=\"Cartão de débito\">Cartão de débito</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"tag\">\n            Categoria:\n            <select id=\"tag\" onChange={ onChangeHandler } data-testid=\"tag-input\">\n              <option value=\"Alimentação\">Alimentação</option>\n              <option value=\"Lazer\">Lazer</option>\n              <option value=\"Trabalho\">Trabalho</option>\n              <option value=\"Transporte\">Transporte</option>\n              <option value=\"Saúde\">Saúde</option>\n            </select>\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"description\">\n            Descrição:\n            <input id=\"description\" type=\"text\" onChange={ onChangeHandler } data-testid=\"description-input\" />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrency: () => dispatch(fetchCurrencies()),\n  saveExpense: (expense) => dispatch(saveExpense(expense)),\n});\n\nexport default connect(null, mapDispatchToProps)(AddForm);\n"]},"metadata":{},"sourceType":"module"}